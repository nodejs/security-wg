{
  "id": 87,
  "created_at": "2016-03-21T17:05:15.527+00:00",
  "updated_at": "2016-10-31T20:32:51+00:00",
  "title": "Forgeable Public/Private Tokens",
  "author": "Theofanis Katsimpas",
  "module_name": "jwt-simple",
  "publish_date": "2016-10-31",
  "cves": [],
  "vulnerable_versions": null,
  "patched_versions": null,
  "slug": "jwt-simple_forgeable-publicprivate-tokens",
  "overview": "Since \"algorithm\" isn't enforced in jwt.decode(), a malicious user could choose what algorithm is sent sent to the server. If the server is expecting RSA but is sent HMAC-SHA with RSA's public key, the server will think the public key is actually an HMAC private key. This could be used to forge any data an attacker wants.",
  "recommendation": "Change jwt.decode() to include an algorithm parameter.",
  "references": "- https://auth0.com/blog/2015/03/31/critical-vulnerabilities-in-json-web-token-libraries/\n- https://github.com/hokaccha/node-jwt-simple/pull/14\n- https://github.com/hokaccha/node-jwt-simple/pull/16",
  "cvss_vector": "CVSS:3.0/AV:N/AC:H/PR:L/UI:N/S:U/C:L/I:L/A:N",
  "cvss_score": 4.2,
  "coordinating_vendor": "^Lift Security"
}
