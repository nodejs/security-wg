{
  "id": 101,
  "created_at": "2016-04-18",
  "updated_at": "2017-01-20",
  "title": "Sanitization bypass using HTML Entities",
  "author": {
    "name": "Matt Austin",
    "website": null,
    "username": null
  },
  "module_name": "marked",
  "publish_date": "2016-04-18",
  "cves": [],
  "vulnerable_versions": "<=0.3.5",
  "patched_versions": ">=0.3.6",
  "overview": "marked is an application that is meant to parse and compile markdown.\n\nDue to the way that marked parses input, specifically HTML entities, it's possible to bypass marked's content injection protection (`sanitize: true`) to inject a `javascript:` URL.\n\nThis flaw exists because `&#xNNanything;` gets parsed to what it could and leaves the rest behind, resulting in just `anything;` being left. \n\nFor example:\n\nIf a malicious user could provide this input to the application `javascript&#x58document;alert&#40;1&#41;` resulting in a valid link, that when a user clicked it would execute `alert(1)`.",
  "recommendation": "Upgrade to version 0.3.6 or greater.",
  "references": [
    "https://github.com/chjj/marked/pull/592",
    "https://github.com/chjj/marked/pull/592/commits/2cff85979be8e7a026a9aca35542c470cf5da523"
  ],
  "cvss_vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
  "cvss_score": 5.3,
  "coordinating_vendor": "^Lift Security"
}
