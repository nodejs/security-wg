{
  "id": 356,
  "created_at": "2017-05-30",
  "updated_at": "2017-06-05",
  "title": "Command Injection",
  "author": {
    "name": "micaksica",
    "website": null,
    "username": null
  },
  "module_name": "pidusage",
  "publish_date": "2017-06-05",
  "cves": [],
  "vulnerable_versions": "<=1.1.4",
  "patched_versions": ">=1.1.5",
  "overview": "pidusage is a module for cross-platform process cpu % and memory usage of a PID.\n\nThe pidusage module passes unsanitized input to child_process.exec, resulting in command injection in the ps method, as the pid is never cast to an integer as the comment expects. This module is vulnerable to this PoC on Darwin, SunOS, FreeBSD, and AIX. Windows and Linux are not vulnerable. \n\nProof of Concept:\n```\nvar pid = require('pidusage');\npid.stat('1 && /usr/local/bin/python');\n```",
  "recommendation": "Update to version 1.1.5 or later.\n\nOtherwise, before passing any untrusted data to the `stat` function, ensure that the data is sanitized using a proper shell escaping library. Note that Windows and Linux are not vulnerable.",
  "references": null,
  "cvss_vector": "CVSS:3.0/AV:L/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
  "cvss_score": 8.4,
  "coordinating_vendor": "^Lift Security"
}
