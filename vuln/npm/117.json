{
  "id": 117,
  "created_at": "2016-05-16",
  "updated_at": "2016-06-21",
  "title": "Potential Command Injection",
  "author": {
    "name": "Koki Takahashi, Node Security Team",
    "website": null,
    "username": null
  },
  "module_name": "shell-quote",
  "publish_date": "2016-06-21",
  "cves": [],
  "vulnerable_versions": "<=1.6.0",
  "patched_versions": ">=1.6.1",
  "overview": "The npm module shell-quote cannot correctly escape > and < operator used for redirection in shell. Im wondering if this might be possible vulnerability for many application which depends on shell-quote.        For example:           const quote = require(shell-quote).quote;       console.log(quote([foo>bar]));        will print foo>bar, where foo\\>bar is desirable.        This module is downloaded more than 1M times per month and many other modules are depending on this. If an application is escaping command-line args with this module, they might be vulnerable from malicious user input.        For example:    ```    var sq = require(../tests/get/shell-quote-1.6.0);    var exec = require(child_process).exec;        var pattern = process.argv[2];        command = sq.quote([grep, pattern]));    exec(cat file |  + command, function ( err, stdout, stderr) {        console.log(command, stdout);       });    ```    will be vulnerable when user input something like pattern = :</etc/passwd, which causes the content of /etc/passwd to be leaked.        Internally, (Jon Lamendola, Nick Starke, Jacob Waddell) found that the `;`, `{`, and `}` characters werent escaped properly either. This allows for full command injection. A malicious user could input `a;{echo,test,123,234}` to execute echo fully.",
  "recommendation": "Upgrade to at least version 1.6.1",
  "references": null,
  "cvss_vector": "CVSS:3.0/AV:L/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
  "cvss_score": 8.4,
  "coordinating_vendor": "^Lift Security"
}
