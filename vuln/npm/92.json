{
  "id": 92,
  "created_at": "2016-03-28",
  "updated_at": "2016-05-04",
  "title": "Private Data Disclosure",
  "author": {
    "name": "Stefan Mirea",
    "website": null,
    "username": null
  },
  "module_name": "express-restify-mongoose",
  "publish_date": "2016-04-19",
  "cves": [],
  "vulnerable_versions": "<= 2.4.2 || >= 3.0.0 <=3.0.1",
  "patched_versions": ">=2.5.0 <= 3.0.0 || >=3.1.0",
  "overview": "express-restify-mongoose is a module to easily create a flexible REST interface for mongoose models.\n\nIf you have a user model that you want to protect, such as the following User model:\n```\nconst User = mongoose.model('User', new mongoose.Schema({\n    name: String,\n    password: String,\n}));\n```\n\nYou would normally do something such as:\n```\nrestify.serve(router, User, {\n    private: ['password'], // Set the password part of User as private, so outside people can't read it\n})\n```\n\nThis would hide the password field from people that send your application a `GET /User` and `GET /User/some-user-id` request. \n\nA malicious user can go to your application and send a request for `GET /User?distinct=password` and get all the passwords for all the users in the database, despite the field being set to private. This can be used for other private data if the malicious user knew what was set as private for specific routes.",
  "recommendation": "Update to at least version 3.1.0 or 2.5.0",
  "references": [
    "https://github.com/florianholzapfel/express-restify-mongoose/issues/252"
  ],
  "cvss_vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:L/A:N",
  "cvss_score": 8.2,
  "coordinating_vendor": "^Lift Security"
}
